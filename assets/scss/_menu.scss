body {
  // Sets the admin bar height variable to 0px when the admin bar is not present.
  &:not(.admin-bar) {
    --wp-admin--admin-bar--height: 0px;
  }

  @media (max-width: $breakpoint-sm) {
    // Stops the page from scrolling behind dropdown menu modals on mobile.
    &:has(.menu-item-has-children.open) {
      height: 100%;
      overflow: hidden;
    }
  }
}

.site-header {
  .menu {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: $spacing-sm;
    list-style: none;
    margin: 0;
    padding: 0;

    .menu-item {
      line-height: $line-height-sm;
      
      a {
        display: block;
        font-family: $headings;
        text-decoration: none;
        white-space: nowrap;

        &:not(:hover) {
          color: $menu-text;
        }

        // Covers <a> tags that go nowhere (the way I usually use them, anyway).
        &:where(:not([href]), [href=""], [href="#"]) {
          color: $menu-text;
          text-decoration: none;
        }
      }
      
    }

    > .menu-item-has-children {
      position: relative;

      // Transparent overlay disables menu item links until the menu is opened.
      &:not(.collapsed-menu):not(.open)::before {
        content: '';
        cursor: pointer;
        inset: 0;
        position: absolute; 
        z-index: 10; 
      }

      // On desktop this is a transparent overlay for Javascript.
      // On mobile this becomes an actual close button. (See below.)
      .close-dropdown {
        cursor: pointer;
        height: $font-size-sm;
        position: absolute;  
          top: 50%;
          right: calc(-1 * (1lh - $font-size-sm) / 2);
        transform: translateY(-50%);
        width: $font-size-sm;
        z-index: 10;

        &:hover  {
          & + a::after {
            background-color: rgba(255, 255, 255, .25);
            border-radius: 9999px;
          }
        }
      }

      // Inserts a + after top-level menu items (except for the collapsed menu and sub-menus 
      // that have been collapsed into it.
      &:not(.collapsed-menu):not(.collapsed-menu &) {
        > a::after {
          content: '\0002B'; // "+"
          display: inline-grid;
          height: .9em;
          margin-left: .15em;
          place-content: center;
          transition: transform 150ms ease-in-out;
          width: .9em;
        }

        // Prevents the x from taking on the link-hover color.
        &:hover:not(:active) {
          > a::after {
            color: $menu-text;
          }
        }
      }

      // Default (desktop) dropdown menu styles.
      > .sub-menu {
        animation: growDown_centered 150ms ease-in-out forwards;
        background-color: var(--wp--preset--color--page);
        border: $border;
        box-shadow: $box-shadow;
        display: none;
        font-size: $font-size-sm;
        padding: $spacing-xxs $spacing-sm;
        position: absolute;
          left: 50%;
        transform: translateX(-50%);
        transform-origin: top;
        z-index: 10;
      }

      // Handles the dropdown menu functionality.
      &.open {
        // On desktop, shows the sub-menu and rotates the + on hover.
        > a {
          + ul.sub-menu {
            display: block;
          }

          &::after {
            transform: rotate(45deg);
          }
        }

        // Mobile
        @media (max-width: $breakpoint-sm) {
          animation: growOut 150ms ease-in-out forwards;
          background-color: var(--wp--preset--color--page);
          border: $border;
          box-shadow: $box-shadow;
          height: calc(100vh - $spacing-sm * 2 - var(--wp-admin--admin-bar--height));
          margin: 0;
          overflow: auto;
          padding: $spacing-sm $spacing-md;
          position: fixed;
            top: calc($spacing-sm + var(--wp-admin--admin-bar--height));
            right: $spacing-sm;
            bottom: $spacing-sm;
            left: $spacing-sm;
          transform-origin: top center;
          width: calc(100vw - ($spacing-sm * 2));
          z-index: 20;

          .menu-item {
            font-size: $font-size-md;

            a {
              white-space: normal;
            }
          }

          > a {
            color: $menu-text;
            font-size: $font-size-lg;
            font-weight: bold;

            &:not(:hover) {
              text-decoration: underline;
              text-decoration-color: $gray-wash;
            }

            &:hover {
              color: $link-hover;
              text-decoration: underline;
              text-decoration-color: currentColor;
            }

            &::after {
              display: none !important;
            }
          }

          .close-dropdown {
            background-color: LightGray;
            background-image: url("../images/close.svg");
            background-position: center;
            background-repeat: no-repeat;
            background-size: 50%;
            border: $border;
            border-radius: 9999px;
            height: $font-size-lg;
            line-height: 1;
            margin: 0;
            position: absolute;
              right: $spacing-xxs;
              top: $spacing-xxs;
            transform: unset;
            transition: box-shadow .2s;
            width: $font-size-lg;

            &:hover:not(:active) {
              box-shadow: $box-shadow;
            }
          }

          & + .dropdown-screen {
            background-color: rgb(0, 0, 0, .4);
            display: block;
            height: 100vh;
            inset: 0;
            position: fixed;
            width: 100vw;
            z-index: 10;
          }

          > .sub-menu {
            animation: unset;
            background: none;
            border: none;
            box-shadow: none;
            margin: 0;
            padding: 0;
            position: unset;
            transform: unset;
          }
        }
      }
    }
  }

  .sub-menu {
    .menu-item {
      display: block;
      margin-top: $spacing-xxs;
      margin-bottom: $spacing-xxs;

      a {
        text-decoration: revert;
        text-decoration-color: $gray-wash;

        &:hover {
          text-decoration-color: currentColor;
        }
      }
    }

    .sub-menu {
      list-style-type: disc;
      margin-left: calc(.8 * $spacing-sm);
      padding: 0;

      .menu-item {
        display: list-item;
      }
    }
  }
}

.primary-menu-container {
  display: grid;
  place-items: center stretch;

  .show-header-cta & {
    grid-gap: $spacing-sm;
    grid-template-columns: minmax(0, 1fr) max-content;
  }

  @media (max-width: $breakpoint-sm) {
    justify-content: space-between;

    .show-header-cta & {
      grid-template-columns: repeat(2, auto);
    }
  }
}

#primary-menu {
  display: grid;
  place-items: center end;
  position: relative;

  @media (max-width: $breakpoint-sm) {
    order: 2;
    place-items: center start;
    position: revert;
  }

  .menu {
    .collapsed-menu {
      @media (min-width: $breakpoint-sm) {
        .close-dropdown {
          height: 100%;
          inset: 0;
          transform: unset;
          width: 100%;
        }
      }

      > a {
        display: inline-block;
        font-weight: bold;
        letter-spacing: .075em;
        text-decoration: none;
        transform: rotate(90deg);
      }

      .sub-menu {
        .menu-item-has-children {
          > a {
            font-size: $font-size-xs;
            margin-top: .75em;
            opacity: $light-text;
            text-transform: uppercase;
          }
        }
  
        .sub-menu {
          list-style: none;
          margin-left: 0;
        }
      }      
    }
  }
}

#header-cta {
  animation: pulse 1s ease-in-out .5s 1 running;
  background-color: var(--header-cta-button-color);
  color: var(--header-cta-text-color);
}

.secondary-menu-container {
  background-color: var(--wp--preset--color--secondary);
}

#secondary-menu {
  .menu {
    font-size: $font-size-sm;
    flex-wrap: wrap;
    gap: $spacing-xxs $spacing-xs;

    @media (min-width: $breakpoint-sm) {
      > .menu-item-has-children:first-child > .sub-menu {
        animation: growDown 150ms ease-in-out forwards;
        position: absolute;
          left: 0;
      }
    }
  }
}
